class Facility
	types
		public String = seq of char;
		public Log = seq of Access;
		public Effect = <Permit> | <Deny> | <Indeterminate> | <notApplicable>;
		public Type = <Hotel> | <School> | <Bank>
	instance variables
		private name : String;
		private log : Log := [];
		private type : Type;
	operations
			
			public Facility: String * Type ==> Facility
			Facility (n, t) == 
				(name := n; 
				 type := t;
				 return self)
			post (name = n and
							type = t);
				
			public GetName: () ==> String
			GetName () ==
				return name;
				
			public SetName: String ==> ()
			SetName(n) ==
				(name := n)
			post (name = n);
				
			public GetType: () ==> Type
			GetType() ==
				(return type);
				
			public SetType: Type ==> ()
			SetType(t) ==
				(type := t)
			post (type = t);
				
			public GetLog: () ==> Log
			GetLog () ==
				return log;
			
			public SetLog: Log ==> ()
			SetLog (l) ==
				(log := l)
			post (log = l);
			
			public AddAccess: Access ==> ()
			AddAccess(a) ==
				(log := log ^ [a]);
				
			public GetAccessesByType: Effect ==> seq of Access
			GetAccessesByType (effect) ==
				(dcl accesses : seq of Access := [];
				 for l in log do (
				 		if (l.GetEffect() = effect)
				 		then accesses := accesses ^ [l];
				 );
				 return accesses;
				)
			pre len log <> 0;
			
end Facility