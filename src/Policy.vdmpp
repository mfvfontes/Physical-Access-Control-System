
class Policy
	types
		public CombAlg = <denyOverrides> | <permitOverrides>;
		public Effect = <Permit> | <Deny> | <Indeterminate> | <notApplicable>;
	instance variables
		private target : Target;
		private rules : set of Rule;
		private ruleCombAlg: CombAlg;
	operations
	
			public Policy: Target * set of Rule * CombAlg ==> Policy
			Policy(t, r, rca) ==
				(target := t;
				 rules := r;
				 ruleCombAlg := rca;
				 return self);
			
			public GetTarget: () ==> Target
			GetTarget() ==
				(return target);
				
			public GetRules: () ==> set of Rule
			GetRules() ==
				(return rules);
				
			public GetRuleCombAlg: () ==> CombAlg
			GetRuleCombAlg() ==
				(return ruleCombAlg);
				
			public GetRulesByEffect: Effect ==> set of Rule
			GetRulesByEffect(effect) ==
				(dcl permits : set of Rule := {};
				 for all r in set rules do (
				 		if(r.GetEffect() = effect)
				 		then permits := permits union {r};
				 );
				 return permits;
				)
				-- Still need to check the pre and post conditions
				
end Policy