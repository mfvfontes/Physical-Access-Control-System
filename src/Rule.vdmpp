class Rule
	types
		public Identifier = nat;
		public Effect = <Permit> | <Deny> | <Indeterminate> | <notApplicable>;
		public String = seq of char;
		-- public Condition = seq of char;
	instance variables
		private identifier: Identifier;
		private description: String;
		private target : Target;
		private effect : Effect := <Deny>;
		private facilityGroup : String;
		private userGroup : String;
		-- private condition: Condition;
	operations
	
		public Rule: Identifier * String * Target * String * String ==> Rule
		Rule(id, d, t, fg, ug) ==
			(identifier := id;
			 description := d;
			 target := t;
			 facilityGroup := fg;
			 userGroup := ug; 
			 return self)
		post (identifier = id and
					target = t and
					description = d and
					facilityGroup = fg and
					userGroup = ug);
		
		public GetIdentifier: () ==> Identifier
		GetIdentifier() ==
			(return identifier);
		
		public GetDescription: () ==> String
		GetDescription() ==
			(return description);
		
		public SetDescription: String ==> ()
		SetDescription(d) ==
			(description := d)
			post (description = d);
		
		public GetTarget: () ==> Target
		GetTarget() ==
			(return target);
			
		public SetTarget: Target ==> ()
		SetTarget(t) ==
			(target := t)
			post (target = t);	
		
		public GetEffect: () ==> Effect
		GetEffect() ==
			(return effect);
			
		public SetEffect: Effect ==> ()
		SetEffect(e) ==
			(effect := e)
			post (effect = e);
		
		public GetFacilityGroup: () ==> String
		GetFacilityGroup() ==
			(return facilityGroup);
			
		public SetFacilityGroup: String ==> ()
		SetFacilityGroup(fg) ==
			(facilityGroup := fg)
			post (facilityGroup = fg);
			
		public GetUserGroup: () ==> String
		GetUserGroup() ==
			(return userGroup);
			
		public setUserGroup: String ==> ()
		setUserGroup(ug) ==
			(userGroup := ug)
			post (userGroup = ug);
			
end Rule